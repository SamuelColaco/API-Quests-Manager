
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum roles {
  admin
  member
}

enum status {
  pending
  in_progress
  completed
}

enum priority {
  high
  medium
  low
}

model Users{
  id String @id @default(uuid())
  name String
  email String @unique
  password String
  role roles @default(member)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  teams TeamsMembers[]
  tasks Tasks[]


  @@map("Users")
}

model Teams {
  id String @id @default(uuid())
  name String
  description String @default("Não tem descrição")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  members TeamsMembers[]
  tasks Tasks[]

  @@map("Teams")
}

model TeamsMembers{
  id String @id @default(uuid())
  userId String @map("user_id")
  teamId String @map("team_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  user Users @relation(fields: [userId], references: [id])
  team Teams @relation(fields: [teamId], references: [id])

  @@map("TeamsMembers")
}

model Tasks{
  id String @id @default(uuid())
  title String
  description String @default("Não tem descrição")
  status status @default(pending)
  priority priority @default(medium)
  assignedTo String @map("assigned_to")
  teamId String @map("team_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  user Users @relation(fields: [assignedTo], references: [id])
  team Teams @relation(fields: [teamId], references: [id])

}